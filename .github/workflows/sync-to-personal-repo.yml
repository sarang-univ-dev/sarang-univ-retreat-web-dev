name: Sync to Personal Private Repo

on:
  push:
    branches:
      - main
      - dev

jobs:
  sync:
    runs-on: ubuntu-latest
    if: github.repository == 'Sarang-Univ/sarang-univ-retreat-web'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up SSH key for main branch
        if: github.ref == 'refs/heads/main'
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up SSH key for dev branch
        if: github.ref == 'refs/heads/dev'
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_DEV }}

      - name: Get branch name
        id: branch
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Sync to personal repository
        run: |
          # personal 계정으로 설정
          git config user.name "sarang-univ-dev"
          git config user.email "sarang-univ-dev@users.noreply.github.com"

          # 현재 브랜치 확인
          CURRENT_BRANCH=${{ steps.branch.outputs.BRANCH_NAME }}
          git checkout $CURRENT_BRANCH

          # 브랜치별 레포지토리 및 타겟 브랜치 설정
          if [ "$CURRENT_BRANCH" = "main" ]; then
            git remote add personal git@github.com:sarang-univ-dev/sarang-univ-retreat-web.git
            TARGET_BRANCH="main"
          else
            git remote add personal git@github.com:sarang-univ-dev/sarang-univ-retreat-web-dev.git
            TARGET_BRANCH="main"
          fi

          # 모든 변경 사항을 단일 커밋으로 만들기 (기존 커밋 유지)
          git add -A
          git commit --allow-empty -m "Sync from Sarang-Univ repository ($CURRENT_BRANCH branch)"

          # Personal 저장소의 브랜치로 푸시
          git push personal $CURRENT_BRANCH:$TARGET_BRANCH --force
